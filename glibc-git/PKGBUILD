# * Maybe generate en_US.UTF-8 until glibc adds C.UTF-8?
#   https://sourceware.org/ml/libc-alpha/2015-02/msg00247.html
#   https://sourceware.org/glibc/wiki/Proposals/C.UTF-8

# * Investigate whether I can build glibc without all the charmaps and just
#   UTF-8, this would cut down testing time.

pkgname=glibc-git
pkgver=2.26.r75.g86c6519ee7
pkgrel=1

pkgdesc='gnu c library'
url='http://www.gnu.org/software/libc'
arch=('x86_64')
groups=('base')
license=('GPL' 'LGPL')

options=('!strip' 'debug' 'staticlibs')
backup=('etc/gai.conf' 'etc/nscd.conf')
install='glibc-git.install'

depends=('linux-api-headers' 'tzdata' 'filesystem')
optdepends=('gd: graph image generation with memusage')
makedepends=('git')

# XXX Arch Linux's valgrind package requires an exact version
provides=('glibc=2.25')
conflicts=('glibc')

source=('git+https://sourceware.org/git/glibc.git'
        'locale-gen'
        'nscd.service'
        'nscd.tmpfiles')

sha256sums=('SKIP'
            '123a549312d81e149fa9052e0b6abdff68cf7b010debb657a65264fb4ba25728'
            '0d261c4b677b8a7a820febaccd60877da091a4200fa05dc3e0c2b140254f313a'
            '79c9cec5dd2414dcb76d11e75903aa6fd9b7785c897cb9f853edcb140a71b779')

pkgver() {
    cd glibc
    git describe | sed 's/^glibc-//; s/-/.r/; s/-/./'
}

prepare() {
    rm -rf build
    mkdir build
}

build() {
    cd build

    { printf 'slibdir=/usr/lib\n'
      printf 'rtlddir=/usr/lib\n'
      printf 'sbindir=/usr/bin\n'
      printf 'rootsbindir=/usr/bin\n'
    } >> configparms

    # https://sourceware.org/bugzilla/show_bug.cgi?id=7065
    # CFLAGS=${CFLAGS/-fstack-protector-strong/}
    CPPFLAGS=${CPPFLAGS/-D_FORTIFY_SOURCE=2/}

    # This is handled properly by --enable-bind-now
    LDFLAGS=${LDFLAGS/,-z,now/}

    "$srcdir"/glibc/configure \
        --prefix=/usr \
        --libdir=/usr/lib \
        --libexecdir=/usr/lib \
        --with-headers=/usr/include \
        --with-bugurl=https://bugs.archlinux.org/ \
        --enable-bind-now \
        --enable-multi-arch \
        --enable-obsolete-rpc \
        --enable-obsolete-nsl \
        --enable-lock-elision \
        --enable-stack-protector=strong \
        --enable-stackguard-randomization \
        --enable-add-ons \
        --disable-werror \
        --disable-profile

    printf 'build-programs=no\n' >> configparms
    make

    # Re-enable hardening for programs.
    sed -i '/build-programs=/s/no/yes/' configparms
    { printf 'CC += -D_FORTIFY_SOURCE=2\n'
      printf 'CXX += -D_FORTIFY_SOURCE=2\n'
    } >> configparms
    make

}

check() {
    cd build
    # Remove harding in preparation to run test-suite.
    # sed -i '/FORTIFY/d' configparms
    # make check || true
}

package() {
    make -C build install_root="$pkgdir" install

    install -dm0755 "$pkgdir"/usr/lib/locale
    install -dm0755 "$pkgdir"/etc/locales
    install -Dm0755 locale-gen "$pkgdir"/usr/bin/locale-gen
    install -Dm0644 glibc/posix/gai.conf "$pkgdir"/etc/gai.conf
    install -Dm0644 glibc/nscd/nscd.conf "$pkgdir"/etc/nscd.conf
    install -Dm0644 nscd.tmpfiles "$pkgdir"/usr/lib/tmpfiles.d/nscd.conf
    install -Dm0644 nscd.service "$pkgdir"/usr/lib/systemd/system/nscd.service

    # Only support UTF-8 charmaps.
    find "$pkgdir"/usr/share/i18n/charmaps ! -name UTF-8.gz -type f -delete

    # We generate these in the post-install with ldconfig -r .
    rm "$pkgdir"/etc/ld.so.cache

    # I use 2> /dev/null for all of these due to many false-positives as it
    # attempts to strip scripts or other unstrippable files--I don't care
    # though.
    find "$pkgdir"/usr/bin -type f -executable -exec strip $STRIP_BINARIES {} + 2> /dev/null || true

    # Do not strip these for gdb and valgrind functionality, but strip the
    # rest.
    find "$pkgdir"/usr/lib ! -name 'ld-*.so' \
                           ! -name 'libc-*.so' \
                           ! -name 'libpthread-*.so' \
                           ! -name 'libthread_db-*.so' \
                             -name '*-*.so' -type f -exec strip $STRIP_SHARED {} + 2> /dev/null || true

    # Strip the remaining static libraries.
    find "$pkgdir"/usr/lib -name '*.a' -type f -exec strip $STRIP_STATIC {} + 2> /dev/null || true
}
